#include<stdio.h>
#include<stdlib.h>

struct node{
    struct node*next;
    int data;
};

void traversal(struct node*head){
    struct node *ptr=head;
    while(ptr != NULL){
        printf("%d\n",ptr -> data);
        ptr = ptr -> next;
    }
}

void deleteAtFirst(struct node** head){
    struct node* ptr = *head;
    *head = (*head) -> next;
    free(ptr);
}

void deleteAtIndex(int index,struct node* head){
    struct node* temp = head;
    struct node* prev = NULL;
    for(int i = 0;temp != NULL && i < index;i++){
        prev = temp;
        temp = temp -> next;
    }
    prev -> next = temp -> next;
    free(temp);
}

void deleteAfterNode(struct node* head,struct node*ptr){
    struct node* temp = ptr;
    struct node* prev = temp->next;
    ptr->next=prev->next;
    free(prev);
}

void deleteAtLast(struct node* head){
    struct node* ptr = head;
    struct node* temp;
    struct node* prev;
    ptr -> next = head -> next;
    while(ptr->next != NULL){
        
    temp = ptr;
        ptr=ptr->next;
    }
    free(ptr);
    temp -> next = NULL;
}

int main(){
    struct node *head=(struct node*)malloc(sizeof(struct node));
    struct node *second=(struct node*)malloc(sizeof(struct node));
    struct node *third=(struct node*)malloc(sizeof(struct node));
    struct node *fourth=(struct node*)malloc(sizeof(struct node));
    
    head -> data = 20;
    head -> next = second;
    
    second -> data = 30;
    second -> next = third;
    
    third -> data = 40;
    third -> next = fourth;
    
    fourth -> data = 50;
    fourth -> next = NULL;
    traversal(head);
    deleteAtLast(head);
    printf("after deletion\n");
    traversal(head);
}